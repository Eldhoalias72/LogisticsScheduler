// <auto-generated />
using System;
using LogisticsScheduler.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogisticsScheduler.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250616154357_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogisticsScheduler.Data.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleCapacity")
                        .HasColumnType("int");

                    b.HasKey("DriverId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("LogisticsScheduler.Data.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCondition")
                        .HasColumnType("int");

                    b.Property<int>("StaffBehaviour")
                        .HasColumnType("int");

                    b.Property<int>("Timeliness")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("LogisticsScheduler.Data.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.HasIndex("DriverId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("LogisticsScheduler.Data.Models.JobStatus", b =>
                {
                    b.Property<int>("UpdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UpdateId"));

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("UpdateId");

                    b.HasIndex("JobId");

                    b.ToTable("JobStatuses");
                });

            modelBuilder.Entity("LogisticsScheduler.Data.Models.Feedback", b =>
                {
                    b.HasOne("LogisticsScheduler.Data.Models.Job", "Job")
                        .WithOne("Feedback")
                        .HasForeignKey("LogisticsScheduler.Data.Models.Feedback", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("LogisticsScheduler.Data.Models.Job", b =>
                {
                    b.HasOne("LogisticsScheduler.Data.Models.Driver", "Driver")
                        .WithMany("Jobs")
                        .HasForeignKey("DriverId");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("LogisticsScheduler.Data.Models.JobStatus", b =>
                {
                    b.HasOne("LogisticsScheduler.Data.Models.Job", "Job")
                        .WithMany("JobStatuses")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("LogisticsScheduler.Data.Models.Driver", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("LogisticsScheduler.Data.Models.Job", b =>
                {
                    b.Navigation("Feedback");

                    b.Navigation("JobStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
