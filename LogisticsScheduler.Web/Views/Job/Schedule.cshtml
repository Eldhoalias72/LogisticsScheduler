@* The model is now the original Job model, as you requested *@
@model List<LogisticsScheduler.Data.Models.Job>
@{
    ViewBag.Title = "Scheduled Jobs";
    DateTime? selectedDate = ViewBag.SelectedDate as DateTime?;
    var drivers = ViewBag.Drivers as List<LogisticsScheduler.Data.Models.Driver> ?? new List<LogisticsScheduler.Data.Models.Driver>();
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<div class="d-flex align-items-center mb-4">
    <a asp-controller="Admin" asp-action="Dashboard" class="btn btn-link text-decoration-none">
        <i class="bi bi-arrow-left"></i> Back to Dashboard
    </a>
    <h2 class="ms-3">Scheduled Jobs</h2>
    <a asp-action="Assign" class="btn btn-primary ms-auto">
        <i class="bi bi-plus"></i> Add New Job
    </a>
</div>

<div class="card p-3 mb-4 shadow-sm">
    <h5 class="mb-3">Filter Jobs</h5>
    <form method="get" asp-action="Schedule" class="d-flex flex-wrap gap-2">
        <div>
            <label class="form-label">Select Date:</label>
            <input type="date" name="date" class="form-control"
                   value="@(selectedDate.HasValue ? selectedDate.Value.ToString("yyyy-MM-dd") : string.Empty)" />
        </div>
        <div class="d-flex align-items-end gap-2">
            <button type="submit" class="btn btn-primary">Apply Filter</button>
            <a asp-action="Schedule" class="btn btn-outline-secondary">Clear</a>
        </div>
    </form>
</div>

<div class="card p-3 shadow-sm">
    <h5 class="mb-3">All Scheduled Jobs</h5>
    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead>
                <tr>
                    <th>Job ID</th>
                    <th>Address</th>
                    <th>Driver</th>
                    <th>Time</th>
                    <th>Status</th>
                    <th>Priority</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var job in Model)
                {
                    <tr>
                        <td>#@job.JobId</td>
                        <td>@job.DeliveryAddress</td>
                        <td>@(job.Driver?.Name ?? "Unassigned")</td>
                        <td>@job.ScheduledTime.ToString("g")</td>
                        <td>
                            <span class="badge @(job.Status == "Completed" ? "bg-success" : job.Status == "In Progress" ? "bg-primary" : "bg-secondary")">@job.Status</span>
                        </td>
                        <td>
                            <span class="badge @(job.Priority >= 5 ? "bg-danger" : job.Priority >= 3 ? "bg-warning" : "bg-info")">
                                Priority @job.Priority
                            </span>
                        </td>
                        <td>
                            @if (job.DriverId == null)
                            {
                                <form method="post" class="d-flex gap-2 assign-form">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="jobId" value="@job.JobId" />
                                    <select name="driverId" class="form-select form-select-sm w-auto assignment-select" required>
                                        <option value="" disabled selected>Choose...</option>
                                        <option value="auto">Auto-Assign</option>
                                        @foreach (var driver in drivers.Where(d => d.IsAvailable))
                                        {
                                            <option value="@driver.DriverId">@driver.Name</option>
                                        }
                                    </select>
                                    <button type="submit" class="btn btn-success btn-sm">Assign</button>
                                </form>
                            }
                            else
                            {
                                <form method="post" asp-action="Reassign" class="d-flex gap-2">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="jobId" value="@job.JobId" />
                                    <select name="driverId" class="form-select form-select-sm w-auto" required>
                                        @foreach (var driver in drivers.Where(d => d.IsAvailable || d.DriverId == job.DriverId))
                                        {
                                            <option value="@driver.DriverId" selected="@(driver.DriverId == job.DriverId)">@driver.Name</option>
                                        }
                                    </select>
                                    <button type="submit" class="btn btn-info btn-sm">Reassign</button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const forms = document.querySelectorAll('.assign-form');

            forms.forEach(form => {
                const select = form.querySelector('.assignment-select');

                form.addEventListener('submit', function (e) {
                    const selectedValue = select.value;

                    if (selectedValue === 'auto') {
                        form.action = '@Url.Action("AutoAssign", "Job")';
                        select.name = 'ignore';
                    } else {
                        form.action = '@Url.Action("Reassign", "Job")';
                        select.name = 'driverId';
                    }
                });
            });
        });
    </script>
}